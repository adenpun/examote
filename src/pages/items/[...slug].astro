---
import Layout from "@layouts/Layout.astro";
import { mongoDB } from "@scripts/db";
import { itemToHtml } from "@scripts/utils";

const item = await mongoDB.getItem(Astro.params.slug!);

let { html, env } = item ? await itemToHtml(item) : {};

const title = env
  ? env.frontmatter?.title
    ? env.frontmatter.title
    : "Title Not Found"
  : "Not Found";
const isEdit = Astro.url.searchParams.get("edit") !== null;
const isSource = Astro.url.searchParams.get("source") !== null;

// console.log(JSON.stringify(env, null, 2));
if (isSource) {
  if (!item) return new Response(null, { status: 404 });
  return new Response(item.content);
}

if (isEdit && Astro.request.method === "POST") {
  if (item) {
    mongoDB.setItem(
      Astro.params.slug!,
      "content",
      (await Astro.request.text()).trim(),
    );
  } else {
    mongoDB.addItem({
      content: (await Astro.request.text()).trim(),
      id: Astro.params.slug!,
    });
  }
}
---

<Layout title={title}>
  {
    !isEdit && (
      <>
        <>
          <h1 class="inline p-2">{title}</h1>
          <a href="?edit" class="print:hidden">
            Edit
          </a>
        </>
        <hr />
        {item && (
          <article
            set:html={html}
            class="prose p-2 print:prose-a:font-normal print:prose-a:text-inherit print:prose-a:no-underline"
          />
        )}
        {!item && (
          <p class="p-2">
            Item not found!{" "}
            <a href={`?edit`}>
              Click here to create a new item with the id: {Astro.params.slug}
            </a>
          </p>
        )}
      </>
    )
  }
  {
    isEdit && (
      <div id="edit-container" class="h-full">
        <pre>{item?.content}</pre>
      </div>
    )
  }
</Layout>

<script>
  import * as monaco from "monaco-editor";
  import * as prettier from "prettier/standalone";
  import markdown from "prettier/plugins/markdown";
  import html from "prettier/plugins/html";
  import yaml from "prettier/plugins/yaml";

  const isEdit = new URL(location.href).searchParams.get("edit") !== null;
  if (isEdit) {
    const container = document.getElementById("edit-container");
    if (container) {
      const sourceElement = container.getElementsByTagName("pre")[0];
      const source = sourceElement.textContent ?? "";
      sourceElement.remove();

      const editor = monaco.editor.create(container, {
        value: source,
        language: "markdown",
        automaticLayout: true,
      });

      editor.addCommand(
        monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyS,
        async () => {
          const formatted = await prettier.format(editor.getValue(), {
            parser: "markdown",
            plugins: [markdown, html, yaml],
          });
          const position = editor.getPosition();
          editor.executeEdits("formatting", [
            { range: editor.getModel()?.getFullModelRange()!, text: formatted },
          ]);
          if (position) editor.setPosition(position);
          await fetch("?edit", {
            method: "POST",
            body: editor.getValue(),
          });
        },
      );
    }
  }
</script>
